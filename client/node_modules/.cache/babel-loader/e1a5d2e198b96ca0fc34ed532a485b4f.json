{"ast":null,"code":"import _classCallCheck from \"/Users/zachchristie/Desktop/code/gymfit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachchristie/Desktop/code/gymfit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachchristie/Desktop/code/gymfit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachchristie/Desktop/code/gymfit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachchristie/Desktop/code/gymfit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zachchristie/Desktop/code/gymfit/client/src/components/Signup/Signup.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      validUsername: false,\n      validPassword: false,\n      confirmPassword: false\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.validatePassword();\n      this.confirmPassword();\n      this.validateUsername();\n    }\n  }, {\n    key: \"validateUsername\",\n    value: function validateUsername() {\n      if (this.props.username.length > 1 && !this.state.validUsername) {\n        this.setState({\n          validUsername: true\n        });\n      }\n\n      if (this.props.username.length < 1 && this.state.validUsername) {\n        this.setState({\n          validUsername: false\n        });\n      }\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function validatePassword() {\n      var strongPassword = new RegExp(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/);\n      var valid = strongPassword.test(this.props.password);\n\n      if (!this.state.validPassword && valid) {\n        this.setState({\n          validPassword: true\n        });\n      }\n\n      if (this.state.validPassword && !valid) {\n        this.setState({\n          validPassword: false\n        });\n      }\n    }\n  }, {\n    key: \"confirmPassword\",\n    value: function confirmPassword() {\n      if (this.props.password === this.props.confirmPassword && !this.state.confirmPassword && this.props.password) {\n        this.setState({\n          confirmPassword: true\n        });\n      }\n\n      if (this.props.password !== this.props.confirmPassword && this.state.confirmPassword) {\n        this.setState({\n          confirmPassword: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"loginTitle title-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Signup\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), this.props.message ? React.createElement(Alert, {\n        className: \"animated fadeIn\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.message) : React.createElement(React.Fragment, null), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"username\",\n        value: this.props.username,\n        onChange: this.props.handleInputChange,\n        valid: this.state.validUsername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"password\",\n        value: this.props.password,\n        onChange: this.props.handleInputChange,\n        valid: this.state.validPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"confirmPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        placeholder: \"confirm password\",\n        value: this.props.confirmPassword,\n        onChange: this.props.handleInputChange,\n        valid: this.state.confirmPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(FormText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"at least 8 characters, 1 capital & 1 number\")), this.state.validUsername && this.state.validPassword && this.state.confirmPassword ? React.createElement(Button, {\n        onClick: this.props.handleSignup,\n        color: \"success\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Signup\") : React.createElement(Button, {\n        onClick: this.props.handleSignup,\n        color: \"danger\",\n        block: true,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Signup\"), React.createElement(\"p\", {\n        className: \"signupLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"already have an account?  Sign in here\"))));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport default Signup;","map":{"version":3,"sources":["/Users/zachchristie/Desktop/code/gymfit/client/src/components/Signup/Signup.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","Alert","Link","Signup","state","validUsername","validPassword","confirmPassword","validatePassword","validateUsername","props","username","length","setState","strongPassword","RegExp","valid","test","password","message","handleInputChange","handleSignup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n    state = {\n        validUsername: false,\n        validPassword: false,\n        confirmPassword: false\n    }\n    \n    componentDidUpdate() {\n        this.validatePassword();\n        this.confirmPassword();\n        this.validateUsername();\n    }\n\n    validateUsername() {\n        if (this.props.username.length > 1 && !this.state.validUsername) {\n            this.setState({\n                validUsername: true\n            });\n        }\n        if (this.props.username.length < 1 && this.state.validUsername) {\n            this.setState({\n                validUsername: false\n            });\n        }\n    }\n\n    validatePassword() {\n        let strongPassword = new RegExp(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/);\n        let valid = strongPassword.test(this.props.password);\n        if (!this.state.validPassword && valid) {\n            this.setState({\n                validPassword: true\n            });\n        }\n        if (this.state.validPassword && !valid) {\n            this.setState({\n                validPassword: false,\n            });\n        }\n    }\n\n    confirmPassword() {\n        if (this.props.password === this.props.confirmPassword && !this.state.confirmPassword && this.props.password) {\n            this.setState({\n                confirmPassword: true\n            });\n        }\n        if (this.props.password !== this.props.confirmPassword && this.state.confirmPassword) {\n            this.setState({\n                confirmPassword: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"loginTitle title-font\">Signup</h2>\n                <hr />\n                {this.props.message?(\n                    <Alert className=\"animated fadeIn\" color=\"danger\">{this.props.message}</Alert>\n                ): (<></>)}\n                <Form>\n                    <FormGroup>\n                        <Label for=\"username\">Username</Label>\n                        <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\" value={this.props.username} onChange={this.props.handleInputChange} valid={this.state.validUsername} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Password</Label>\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" value={this.props.password} onChange={this.props.handleInputChange} valid={this.state.validPassword} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"confirmPassword\">Confirm Password</Label>\n                        <Input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"confirm password\" value={this.props.confirmPassword} onChange={this.props.handleInputChange} valid={this.state.confirmPassword} />\n                        <FormText>at least 8 characters, 1 capital & 1 number</FormText>\n                    </FormGroup>\n                    {/* if all fields are valid, allow the user to submit the form */}\n                    {(this.state.validUsername && this.state.validPassword && this.state.confirmPassword) ? (\n                        <Button onClick={this.props.handleSignup} color=\"success\" block>Signup</Button>\n                    ) : (\n                        <Button onClick={this.props.handleSignup} color=\"danger\" block disabled>Signup</Button>\n                    )}\n                    <p className=\"signupLink\">\n                        <Link to=\"/login\">already have an account?  Sign in here</Link>\n                    </p>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}