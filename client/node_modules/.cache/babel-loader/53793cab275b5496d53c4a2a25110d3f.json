{"ast":null,"code":"var _jsxFileName = \"/Users/zachchristie/Desktop/code/gymfit/client/src/components/SearchForm/index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n  return React.createElement(\"form\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group exercises\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercise-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.name), React.createElement(\"input\", {\n    // value={props.name}\n    onChange: props.handleInputChange,\n    name: \"exercise-name\",\n    list: \"exercises\",\n    className: \"form-control\",\n    placeholder: \"Pick your own.\",\n    id: \"exercise-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"datalist\", {\n    id: \"exercises\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.datalist.map(function (data) {\n    return React.createElement(\"option\", {\n      value: data.id,\n      key: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Hi\");\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: props.handleFormSubmit,\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"form-group exercises\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercise-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.name), React.createElement(\"input\", {\n    // value={props.name}\n    onChange: props.handleInputChange,\n    name: \"exercise-name\",\n    list: \"exercises\",\n    className: \"form-control\",\n    placeholder: \"Pick your own.\",\n    id: \"exercise-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"datalist\", {\n    id: \"exercises\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.datalist.map(function (data) {\n    return React.createElement(\"option\", {\n      value: data.id,\n      key: data.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Hi\");\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: props.handleFormSubmit,\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Search\")));\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/zachchristie/Desktop/code/gymfit/client/src/components/SearchForm/index.js"],"names":["React","SearchForm","props","name","handleInputChange","datalist","map","data","id","handleFormSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SACE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,KAAK,CAACC,IAAtC,CADF,EAEE;AACE;AACA,IAAA,QAAQ,EAAED,KAAK,CAACE,iBAFlB;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,gBANd;AAOE,IAAA,EAAE,EAAC,eAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,WACtB;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,GAAG,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADsB;AAAA,GAAvB,CADH,CAXF,EAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEN,KAAK,CAACO,gBAArC;AAAuD,IAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF,EAqBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCP,KAAK,CAACC,IAAtC,CADF,EAEE;AACE;AACA,IAAA,QAAQ,EAAED,KAAK,CAACE,iBAFlB;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC,gBANd;AAOE,IAAA,EAAE,EAAC,eAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,WACtB;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,GAAG,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADsB;AAAA,GAAvB,CADH,CAXF,EAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEN,KAAK,CAACO,gBAArC;AAAuD,IAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CArBF,CADF;AA4CD;;AAED,eAAeR,UAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group exercises\">\n        <label htmlFor=\"exercise-name\">{props.name}</label>\n        <input\n          // value={props.name}\n          onChange={props.handleInputChange}\n          name=\"exercise-name\"\n          list=\"exercises\"\n          className=\"form-control\"\n          placeholder=\"Pick your own.\"\n          id=\"exercise-name\"\n        />\n        <datalist id=\"exercises\">\n          {props.datalist.map(data => (\n            <option value={data.id} key={data.id} >Hi</option>\n          ))}\n        </datalist>\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n      <div className=\"form-group exercises\">\n        <label htmlFor=\"exercise-name\">{props.name}</label>\n        <input\n          // value={props.name}\n          onChange={props.handleInputChange}\n          name=\"exercise-name\"\n          list=\"exercises\"\n          className=\"form-control\"\n          placeholder=\"Pick your own.\"\n          id=\"exercise-name\"\n        />\n        <datalist id=\"exercises\">\n          {props.datalist.map(data => (\n            <option value={data.id} key={data.id} >Hi</option>\n          ))}\n        </datalist>\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}